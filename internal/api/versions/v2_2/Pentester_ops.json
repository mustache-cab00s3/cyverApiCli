{
  "/api/v2.2/pentester/projects": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a paginated list of Projects based on a filter",
      "operationId": "ApiV2.2PentesterProjectsGet",
      "parameters": [
        {
          "name": "ClientId",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "Status",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "LabelIdList",
          "in": "query",
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        {
          "name": "MaxResultCount",
          "in": "query",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        },
        {
          "name": "SkipCount",
          "in": "query",
          "schema": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        {
          "name": "Filter",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectDtoV2PagedResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    },
    "post": {
      "tags": [
        "Pentester"
      ],
      "summary": "Create a new Project",
      "operationId": "ApiV2.2PentesterProjectsPost",
      "parameters": [
        {
          "name": "triggerEvents",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateProjectRequestV2"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateProjectRequestV2"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateProjectRequestV2"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateProjectRequestV2"
            }
          }
        }
      },
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "201": {
          "description": "Created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/projects/{id}": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a Project by ID",
      "operationId": "ApiV2.2PentesterProjectsByIdGet",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "404": {
          "description": "Not Found"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectDtoV2AjaxResponse"
              }
            }
          }
        }
      }
    },
    "delete": {
      "tags": [
        "Pentester"
      ],
      "summary": "Deletes a Project by ID",
      "operationId": "ApiV2.2PentesterProjectsByIdDelete",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "200": {
          "description": "Success"
        }
      }
    }
  },
  "/api/v2.2/pentester/projects/{id}/status": {
    "put": {
      "tags": [
        "Pentester"
      ],
      "summary": "Update the status of a Project",
      "operationId": "ApiV2.2PentesterProjectsByIdStatusPut",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "triggerEvents",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateProjectStatusRequestV2"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateProjectStatusRequestV2"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateProjectStatusRequestV2"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateProjectStatusRequestV2"
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "Bad Request"
        }
      }
    }
  },
  "/api/v2.2/pentester/projects/{id}/assets": {
    "put": {
      "tags": [
        "Pentester"
      ],
      "summary": "Set the assets of a Project",
      "operationId": "ApiV2.2PentesterProjectsByIdAssetsPut",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "text/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "application/*+json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "Bad Request"
        }
      }
    }
  },
  "/api/v2.2/pentester/projects/{id}/users": {
    "put": {
      "tags": [
        "Pentester"
      ],
      "summary": "Set the users of a Project",
      "operationId": "ApiV2.2PentesterProjectsByIdUsersPut",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "triggerEvents",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "text/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "application/*+json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "Bad Request"
        }
      }
    }
  },
  "/api/v2.2/pentester/projects/{id}/teams": {
    "put": {
      "tags": [
        "Pentester"
      ],
      "summary": "Set the teams of a Project",
      "operationId": "ApiV2.2PentesterProjectsByIdTeamsPut",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "text/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "application/*+json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "Bad Request"
        }
      }
    }
  },
  "/api/v2.2/pentester/projects/{id}/checklists": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a paginated list of the Project Checklists",
      "operationId": "ApiV2.2PentesterProjectsByIdChecklistsGet",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectChecklistDtoListResultDtoAjaxResponse"
              }
            }
          }
        },
        "400": {
          "description": "Bad Request"
        }
      }
    }
  },
  "/api/v2.2/pentester/projects/{id}/compliance-norms": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a paginated list of the Project Compliance norms",
      "operationId": "ApiV2.2PentesterProjectsByIdCompliance-NormsGet",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectComplianceNormDtoListResultDtoAjaxResponse"
              }
            }
          }
        },
        "400": {
          "description": "Bad Request"
        }
      }
    }
  },
  "/api/v2.2/pentester/projects/{id}/reports/versions": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a list of the Project Report versions",
      "operationId": "ApiV2.2PentesterProjectsByIdReportsVersionsGet",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "404": {
          "description": "Not Found"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportVersionDtoListResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/projects/{id}/reports/{reportVersion}": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get the Report content. If no version Id is supplied, default to the latest published version.",
      "operationId": "ApiV2.2PentesterProjectsByIdReportsByReportversionGet",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "reportVersion",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "404": {
          "description": "Not Found"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportDtoAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/projects/{id}/upload-file": {
    "post": {
      "tags": [
        "Pentester"
      ],
      "summary": "Uploads a file to the Project",
      "operationId": "ApiV2.2PentesterProjectsByIdUpload-FilePost",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "required": [
                "file"
              ],
              "type": "object",
              "properties": {
                "file": {
                  "type": "file",
                  "format": "binary"
                },
                "fileType": {
                  "$ref": "#/components/schemas/FileTypeEnum"
                }
              }
            },
            "encoding": {
              "file": {
                "style": "form"
              },
              "fileType": {
                "style": "form"
              }
            }
          }
        }
      },
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "200": {
          "description": "Success"
        }
      }
    }
  },
  "/api/v2.2/pentester/continuous-projects": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a paginated list of Continuous Projects based on a filter",
      "operationId": "ApiV2.2PentesterContinuous-ProjectsGet",
      "parameters": [
        {
          "name": "ClientId",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "Status",
          "in": "query",
          "description": "\n\n0 = Active\n\n1 = Stopped\n\n2 = Requested",
          "schema": {
            "$ref": "#/components/schemas/ContinuousProjectStatusEnum"
          }
        },
        {
          "name": "LabelIdList",
          "in": "query",
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        {
          "name": "MaxResultCount",
          "in": "query",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        },
        {
          "name": "SkipCount",
          "in": "query",
          "schema": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        {
          "name": "Filter",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContinuousProjectDtoPagedResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    },
    "post": {
      "tags": [
        "Pentester"
      ],
      "summary": "Create a new Continuous Project",
      "operationId": "ApiV2.2PentesterContinuous-ProjectsPost",
      "parameters": [
        {
          "name": "triggerEvents",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateContinuousProjectRequest"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateContinuousProjectRequest"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateContinuousProjectRequest"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateContinuousProjectRequest"
            }
          }
        }
      },
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "201": {
          "description": "Created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/continuous-projects/{id}": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a Project by ID",
      "operationId": "ApiV2.2PentesterContinuous-ProjectsByIdGet",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "404": {
          "description": "Not Found"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContinuousProjectDtoAjaxResponse"
              }
            }
          }
        }
      }
    },
    "delete": {
      "tags": [
        "Pentester"
      ],
      "summary": "Deletes a Project by ID",
      "operationId": "ApiV2.2PentesterContinuous-ProjectsByIdDelete",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "200": {
          "description": "Success"
        }
      }
    }
  },
  "/api/v2.2/pentester/continuous-projects/{id}/status": {
    "put": {
      "tags": [
        "Pentester"
      ],
      "summary": "Update the status of a Continuous Project",
      "operationId": "ApiV2.2PentesterContinuous-ProjectsByIdStatusPut",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "triggerEvents",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateContinuousProjectStatusRequest"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateContinuousProjectStatusRequest"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateContinuousProjectStatusRequest"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateContinuousProjectStatusRequest"
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "No Content"
        }
      }
    }
  },
  "/api/v2.2/pentester/continuous-projects/{id}/assets": {
    "put": {
      "tags": [
        "Pentester"
      ],
      "summary": "Set the assets of a Continuous Project",
      "operationId": "ApiV2.2PentesterContinuous-ProjectsByIdAssetsPut",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "text/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "application/*+json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "No Content"
        }
      }
    }
  },
  "/api/v2.2/pentester/continuous-projects/{id}/users": {
    "put": {
      "tags": [
        "Pentester"
      ],
      "summary": "Set the users of a Continuous Project",
      "operationId": "ApiV2.2PentesterContinuous-ProjectsByIdUsersPut",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "triggerEvents",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "text/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "application/*+json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "Bad Request"
        }
      }
    }
  },
  "/api/v2.2/pentester/continuous-projects/{id}/teams": {
    "put": {
      "tags": [
        "Pentester"
      ],
      "summary": "Set the teams of a Continuous Project",
      "operationId": "ApiV2.2PentesterContinuous-ProjectsByIdTeamsPut",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "text/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "application/*+json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "Bad Request"
        }
      }
    }
  },
  "/api/v2.2/pentester/continuous-projects/{id}/runs": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get all runs of a Continuous Project",
      "operationId": "ApiV2.2PentesterContinuous-ProjectsByIdRunsGet",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "404": {
          "description": "Not Found"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunDtoListResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/continuous-projects/{id}/complete-run": {
    "post": {
      "tags": [
        "Pentester"
      ],
      "summary": "Close the current run of a Continuous Project",
      "operationId": "ApiV2.2PentesterContinuous-ProjectsByIdComplete-RunPost",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "triggerEvents",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        }
      }
    }
  },
  "/api/v2.2/pentester/continuous-projects/{id}/reports/versions": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a list of the Continuous Project Report versions",
      "operationId": "ApiV2.2PentesterContinuous-ProjectsByIdReportsVersionsGet",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "404": {
          "description": "Not Found"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportVersionDtoListResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/continuous-projects/{id}/reports/{reportVersion}": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get the report contents of the Continuous Project. Default Report version is the latest.",
      "operationId": "ApiV2.2PentesterContinuous-ProjectsByIdReportsByReportversionGet",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "reportVersion",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "404": {
          "description": "Not Found"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportDtoAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/continuous-projects/{id}/upload-file": {
    "post": {
      "tags": [
        "Pentester"
      ],
      "summary": "Uploads a file to the Continuous Project",
      "operationId": "ApiV2.2PentesterContinuous-ProjectsByIdUpload-FilePost",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "required": [
                "file"
              ],
              "type": "object",
              "properties": {
                "file": {
                  "type": "file",
                  "format": "binary"
                },
                "fileType": {
                  "$ref": "#/components/schemas/FileTypeEnum"
                }
              }
            },
            "encoding": {
              "file": {
                "style": "form"
              },
              "fileType": {
                "style": "form"
              }
            }
          }
        }
      },
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "200": {
          "description": "Success"
        }
      }
    }
  },
  "/api/v2.2/pentester/findings": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a paginated list of Findings based on a filter",
      "operationId": "ApiV2.2PentesterFindingsGet",
      "parameters": [
        {
          "name": "ProjectId",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "Type",
          "in": "query",
          "description": "\n\n1 = Vulnerability\n\n2 = Nonconformity\n\n4 = Observation\n\n8 = Incident\n\n16 = Risk",
          "schema": {
            "$ref": "#/components/schemas/FindingTypeEnum"
          }
        },
        {
          "name": "Status",
          "in": "query",
          "description": "\n\n1 = Draft\n\n2 = PendingFix\n\n3 = Fixed\n\n4 = ReadyRetest\n\n5 = Accepted\n\n6 = ToReview\n\n7 = Reviewed\n\n8 = Mitigated\n\n9 = PartialFix\n\n10 = FalsePositive\n\n11 = Raised\n\n12 = ReOpen\n\n13 = Acknowledged\n\n14 = Identified",
          "schema": {
            "$ref": "#/components/schemas/FindingStatusEnum"
          }
        },
        {
          "name": "SeverityList",
          "in": "query",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FindingCriticalityEnum"
            }
          }
        },
        {
          "name": "VulnerabilityTypeList",
          "in": "query",
          "schema": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "IdList",
          "in": "query",
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        {
          "name": "AssetIdList",
          "in": "query",
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        {
          "name": "MaxResultCount",
          "in": "query",
          "schema": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        },
        {
          "name": "SkipCount",
          "in": "query",
          "schema": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "404": {
          "description": "Not Found"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindingDtoPagedResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    },
    "post": {
      "tags": [
        "Pentester"
      ],
      "summary": "Create a new Finding",
      "operationId": "ApiV2.2PentesterFindingsPost",
      "parameters": [
        {
          "name": "projectId",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "triggerEvents",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateFindingRequest"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateFindingRequest"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateFindingRequest"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateFindingRequest"
            }
          }
        }
      },
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "201": {
          "description": "Created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/findings/{id}": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a Finding by ID",
      "operationId": "ApiV2.2PentesterFindingsByIdGet",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "includeEvidence",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "404": {
          "description": "Not Found"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindingDtoAjaxResponse"
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": [
        "Pentester"
      ],
      "summary": "Update an existing Finding",
      "operationId": "ApiV2.2PentesterFindingsByIdPut",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "triggerEvents",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateFindingRequest"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateFindingRequest"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateFindingRequest"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateFindingRequest"
            }
          }
        }
      },
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "200": {
          "description": "Success"
        }
      }
    },
    "delete": {
      "tags": [
        "Pentester"
      ],
      "summary": "Deletes a Finding by ID",
      "operationId": "ApiV2.2PentesterFindingsByIdDelete",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "200": {
          "description": "Success"
        }
      }
    }
  },
  "/api/v2.2/pentester/findings/import": {
    "post": {
      "tags": [
        "Pentester"
      ],
      "summary": "Import Findings from a file",
      "operationId": "ApiV2.2PentesterFindingsImportPost",
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "required": [
                "file",
                "ProjectId"
              ],
              "type": "object",
              "properties": {
                "file": {
                  "type": "file",
                  "format": "binary"
                },
                "ProjectId": {
                  "type": "string",
                  "format": "uuid"
                },
                "AssetOption": {
                  "$ref": "#/components/schemas/AssetMatchOptionEnum"
                },
                "EvidenceOption": {
                  "$ref": "#/components/schemas/EvidenceOptionEnum"
                },
                "ImportFileType": {
                  "$ref": "#/components/schemas/ImportFileTypeEnum"
                },
                "ReoccurrenceOption": {
                  "$ref": "#/components/schemas/ReoccurrenceOptionEnum"
                },
                "AssetType": {
                  "$ref": "#/components/schemas/AssetTypeEnum"
                },
                "EvidenceFieldMaxLength": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "encoding": {
              "file": {
                "style": "form"
              },
              "ProjectId": {
                "style": "form"
              },
              "AssetOption": {
                "style": "form"
              },
              "EvidenceOption": {
                "style": "form"
              },
              "ImportFileType": {
                "style": "form"
              },
              "ReoccurrenceOption": {
                "style": "form"
              },
              "AssetType": {
                "style": "form"
              },
              "EvidenceFieldMaxLength": {
                "style": "form"
              }
            }
          }
        }
      },
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Int32AjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/clients": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a paginated list of Clients based on a filter",
      "operationId": "ApiV2.2PentesterClientsGet",
      "parameters": [
        {
          "name": "Status",
          "in": "query",
          "description": "\n\n0 = Active\n\n1 = Inactive\n\n2 = New\n\n3 = SignUp",
          "schema": {
            "$ref": "#/components/schemas/ClientStatusEnum"
          }
        },
        {
          "name": "LabelIdList",
          "in": "query",
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        {
          "name": "MaxResultCount",
          "in": "query",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        },
        {
          "name": "SkipCount",
          "in": "query",
          "schema": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        {
          "name": "Filter",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientDtoPagedResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    },
    "post": {
      "tags": [
        "Pentester"
      ],
      "summary": "Create a new Client",
      "operationId": "ApiV2.2PentesterClientsPost",
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateClientRequest"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateClientRequest"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateClientRequest"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateClientRequest"
            }
          }
        }
      },
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "201": {
          "description": "Created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/clients/{id}": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a Client by ID",
      "operationId": "ApiV2.2PentesterClientsByIdGet",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "404": {
          "description": "Not Found"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientDtoAjaxResponse"
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": [
        "Pentester"
      ],
      "summary": "Update an existing Client",
      "operationId": "ApiV2.2PentesterClientsByIdPut",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateClientRequest"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateClientRequest"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateClientRequest"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateClientRequest"
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "Bad Request"
        }
      }
    },
    "delete": {
      "tags": [
        "Pentester"
      ],
      "summary": "Deletes a Client by ID",
      "operationId": "ApiV2.2PentesterClientsByIdDelete",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "200": {
          "description": "Success"
        }
      }
    }
  },
  "/api/v2.2/pentester/clients/{id}/assets": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a paginated list of Assets based on a filter",
      "operationId": "ApiV2.2PentesterClientsByIdAssetsGet",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "TypeList",
          "in": "query",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTypeEnum"
            }
          }
        },
        {
          "name": "MaxResultCount",
          "in": "query",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        },
        {
          "name": "SkipCount",
          "in": "query",
          "schema": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        {
          "name": "Filter",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetDtoPagedResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    },
    "post": {
      "tags": [
        "Pentester"
      ],
      "summary": "Create a new Client Asset",
      "operationId": "ApiV2.2PentesterClientsByIdAssetsPost",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateAssetRequest"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateAssetRequest"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateAssetRequest"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateAssetRequest"
            }
          }
        }
      },
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/clients/{id}/assets/{assetId}": {
    "put": {
      "tags": [
        "Pentester"
      ],
      "summary": "Update a Client Asset",
      "operationId": "ApiV2.2PentesterClientsByIdAssetsByAssetidPut",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "assetId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateAssetRequest"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateAssetRequest"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateAssetRequest"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateAssetRequest"
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "Bad Request"
        }
      }
    }
  },
  "/api/v2.2/pentester/project-templates": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a paginated list of Project Templates",
      "operationId": "ApiV2.2PentesterProject-TemplatesGet",
      "parameters": [
        {
          "name": "Type",
          "in": "query",
          "description": "\n\n0 = Timebased\n\n1 = Continuous",
          "schema": {
            "$ref": "#/components/schemas/ProjectTypeEnum"
          }
        },
        {
          "name": "MaxResultCount",
          "in": "query",
          "schema": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        },
        {
          "name": "SkipCount",
          "in": "query",
          "schema": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTemplateDtoPagedResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/report-templates": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a paginated list of Report Templates",
      "operationId": "ApiV2.2PentesterReport-TemplatesGet",
      "parameters": [
        {
          "name": "MaxResultCount",
          "in": "query",
          "schema": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        },
        {
          "name": "SkipCount",
          "in": "query",
          "schema": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportTemplateDtoPagedResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/checklist-templates": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a paginated list of Checklist Templates",
      "operationId": "ApiV2.2PentesterChecklist-TemplatesGet",
      "parameters": [
        {
          "name": "MaxResultCount",
          "in": "query",
          "schema": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        },
        {
          "name": "SkipCount",
          "in": "query",
          "schema": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecklistTemplateDtoPagedResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/compliance-norm-templates": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a paginated list of Compliance norm Templates",
      "operationId": "ApiV2.2PentesterCompliance-Norm-TemplatesGet",
      "parameters": [
        {
          "name": "MaxResultCount",
          "in": "query",
          "schema": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        },
        {
          "name": "SkipCount",
          "in": "query",
          "schema": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceNormTemplateDtoPagedResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/labels": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a paginated list of Labels based on a filter",
      "operationId": "ApiV2.2PentesterLabelsGet",
      "parameters": [
        {
          "name": "Type",
          "in": "query",
          "description": "\n\n0 = Finding\n\n1 = Client\n\n2 = Project\n\n3 = Assets\n\n4 = All",
          "schema": {
            "$ref": "#/components/schemas/LabelTypeEnum"
          }
        },
        {
          "name": "MaxResultCount",
          "in": "query",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        },
        {
          "name": "SkipCount",
          "in": "query",
          "schema": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        {
          "name": "Filter",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LabelDtoPagedResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/vulnerability-types": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a paginated list of Vulnerability Types based on a filter",
      "operationId": "ApiV2.2PentesterVulnerability-TypesGet",
      "parameters": [
        {
          "name": "MaxResultCount",
          "in": "query",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        },
        {
          "name": "SkipCount",
          "in": "query",
          "schema": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        {
          "name": "Filter",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VulnerabilityTypeDtoPagedResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/users": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Gets a list of Users based on a filter",
      "operationId": "ApiV2.2PentesterUsersGet",
      "parameters": [
        {
          "name": "ClientId",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "PortalRole",
          "in": "query",
          "description": "\n\n0 = Pentester\n\n1 = Client",
          "schema": {
            "$ref": "#/components/schemas/RolePortalEnum"
          }
        },
        {
          "name": "MaxResultCount",
          "in": "query",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        },
        {
          "name": "SkipCount",
          "in": "query",
          "schema": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        {
          "name": "Filter",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDtoPagedResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    },
    "post": {
      "tags": [
        "Pentester"
      ],
      "summary": "Create a new User",
      "description": "You can't create a new owner through the API.\r\nTo create a client user you need to add the client id to the request.",
      "operationId": "ApiV2.2PentesterUsersPost",
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateUserRequest"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateUserRequest"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateUserRequest"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateUserRequest"
            }
          }
        }
      },
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "201": {
          "description": "Created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/users/{id}": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get an User by ID",
      "operationId": "ApiV2.2PentesterUsersByIdGet",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "404": {
          "description": "Not Found"
        },
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDtoAjaxResponse"
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": [
        "Pentester"
      ],
      "summary": "Update an existing User",
      "operationId": "ApiV2.2PentesterUsersByIdPut",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateUserRequest"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateUserRequest"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateUserRequest"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateUserRequest"
            }
          }
        }
      },
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "204": {
          "description": "No Content"
        }
      }
    },
    "delete": {
      "tags": [
        "Pentester"
      ],
      "summary": "Delete an User by ID",
      "operationId": "ApiV2.2PentesterUsersByIdDelete",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "400": {
          "description": "Bad Request"
        },
        "200": {
          "description": "Success"
        }
      }
    }
  },
  "/api/v2.2/pentester/teams": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a paginated list of Teams",
      "operationId": "ApiV2.2PentesterTeamsGet",
      "parameters": [
        {
          "name": "ProjectId",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "ExcludeProjectId",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "ClientId",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "TeamType",
          "in": "query",
          "description": "\n\n0 = Undefined\n\n1 = Pentesters\n\n2 = Clients",
          "schema": {
            "$ref": "#/components/schemas/TeamTypeEnum"
          }
        },
        {
          "name": "MaxResultCount",
          "in": "query",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        },
        {
          "name": "SkipCount",
          "in": "query",
          "schema": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        {
          "name": "Filter",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamDtoPagedResultDtoAjaxResponse"
              }
            }
          }
        }
      }
    },
    "post": {
      "tags": [
        "Pentester"
      ],
      "summary": "Create a new Team.\r\nIf the team is a Client team, you need to provide the Client id.",
      "operationId": "ApiV2.2PentesterTeamsPost",
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateTeamRequest"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateTeamRequest"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateTeamRequest"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateTeamRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v2.2/pentester/teams/{id}": {
    "get": {
      "tags": [
        "Pentester"
      ],
      "summary": "Get a Team by ID",
      "operationId": "ApiV2.2PentesterTeamsByIdGet",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamDtoAjaxResponse"
              }
            }
          }
        },
        "400": {
          "description": "Bad Request"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "put": {
      "tags": [
        "Pentester"
      ],
      "summary": "Update an existing Team.\r\nCannot change the Client id of a Team.",
      "operationId": "ApiV2.2PentesterTeamsByIdPut",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateTeamRequest"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateTeamRequest"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateTeamRequest"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/CreateOrUpdateTeamRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "Bad Request"
        }
      }
    },
    "delete": {
      "tags": [
        "Pentester"
      ],
      "summary": "Delete a Team.",
      "operationId": "ApiV2.2PentesterTeamsByIdDelete",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "Bad Request"
        }
      }
    }
  },
  "/api/TokenAuth/Authenticate": {
    "post": {
      "tags": [
        "TokenAuth"
      ],
      "operationId": "ApiTokenauthAuthenticatePost",
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/AuthenticateModel"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthenticateModel"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthenticateModel"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/AuthenticateModel"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateResultModelAjaxResponse"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateResultModelAjaxResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateResultModelAjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/TokenAuth/RefreshToken": {
    "post": {
      "tags": [
        "TokenAuth"
      ],
      "operationId": "ApiTokenauthRefreshtokenPost",
      "parameters": [
        {
          "name": "refreshToken",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenResultAjaxResponse"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenResultAjaxResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenResultAjaxResponse"
              }
            }
          }
        },
        "400": {
          "description": "Bad Request",
          "content": {
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/AjaxResponse"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AjaxResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AjaxResponse"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/AjaxResponse"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AjaxResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AjaxResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/TokenAuth/SendTwoFactorAuthCode": {
    "post": {
      "tags": [
        "TokenAuth"
      ],
      "operationId": "ApiTokenauthSendtwofactorauthcodePost",
      "requestBody": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/SendTwoFactorAuthCodeModel"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SendTwoFactorAuthCodeModel"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/SendTwoFactorAuthCodeModel"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/SendTwoFactorAuthCodeModel"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Success"
        }
      }
    }
  }
}